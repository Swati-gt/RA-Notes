{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Verdana;
\f3\fnil\fcharset0 Consolas;\f4\fnil\fcharset0 Consolas-Italic;\f5\fswiss\fcharset0 ArialMT;
}
{\colortbl;\red255\green255\blue255;\red234\green234\blue234;\red37\green37\blue37;\red83\green85\blue2;
\red255\green255\blue255;\red0\green0\blue0;\red250\green234\blue173;\red0\green0\blue255;\red106\green0\blue67;
\red11\green84\blue83;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww14200\viewh16200\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Customer : ID, Customer Name, Customer Age, Customer Address, Customer Salary\
Order: ID, Customer ID, Date, Amount\
\
1) most frequently used and important  is Inner joins ->Equijoins\
\
\pard\pardeftab720\sl320

\f1 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ...\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM table1\
INNER JOIN table2\
ON table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 =\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
2) 
\f2\b\fs30 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 LEFT JOIN
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  returns all rows from the left table, even if there are no matches in the right table.\
\
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ...\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM table1\
LEFT JOIN table2\
ON table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 =\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
3) 
\f2\b\fs30 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 RIGHT JOIN
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  returns all rows from the right table, even if there are no matches in the left table.
\f0\fs24 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\pard\pardeftab720\sl320

\f1 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ...\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM table1\
RIGHT JOIN table2\
ON table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 =\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
4) 
\f2\b\fs30 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 FULL JOIN
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  combines the results of both left and right outer joins.\
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ...\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM table1\
FULL JOIN table2\
ON table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 =\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\pardeftab720\li60\ri60\sl480\sa300\qj
\cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 If your Database does not support FULL JOIN like MySQL does not support FULL JOIN, then you can use 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 UNION ALL
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  clause to combine two JOINS as follows:\
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SQL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 >\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  SELECT  ID\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  NAME\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  AMOUNT\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  DATE\
     FROM CUSTOMERS\
     LEFT JOIN ORDERS\
     ON CUSTOMERS\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ID \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 =\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  ORDERS\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 CUSTOMER_ID\
UNION ALL\
     SELECT  ID\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  NAME\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  AMOUNT\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  DATE\
     FROM CUSTOMERS\
     RIGHT JOIN ORDERS\
     ON CUSTOMERS\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ID \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 =\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  ORDERS\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 CUSTOMER_ID\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
5)
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 SELF JOIN
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  is used to join a table to itself as if the table were two tables\
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT a\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column_name\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  b\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column_name\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ...\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM table1 a\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table1 b\
WHERE a\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 =\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  b\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 common_field\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
6)
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 CARTESIAN JOIN
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  or 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 CROSS JOIN
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  returns the Cartesian product of the sets of records from the two or more joined tables. \
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 .\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ...\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM  table1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
7) Left Excluding JOIN\
\pard\pardeftab720

\f3\fs24 \cf0 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 SELECT\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  
\f4\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 <select_list>
\f3\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 FROM\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  Table_A A\
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 LEFT\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 JOIN\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  Table_B B\
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 ON\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  A.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  = B.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 WHERE\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  B.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 IS\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 NULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
8) Right Excluding JOIN\
\pard\pardeftab720

\f3\fs24 \cf0 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 SELECT\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  
\f4\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 <select_list>
\f3\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 FROM\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  Table_A A\
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 RIGHT\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 JOIN\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  Table_B B\
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 ON\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  A.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  = B.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 WHERE\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  A.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 IS\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 NULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
9) Outer Excluding JOIN\
\pard\pardeftab720

\f3\fs24 \cf0 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 SELECT\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  
\f4\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 <select_list>
\f3\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 FROM\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  Table_A A\
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 FULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 OUTER\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 JOIN\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  Table_B B\
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 ON\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  A.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  = B.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 WHERE\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  A.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 IS\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 NULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 OR\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  B.\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Key\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 IS\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 NULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
10) ORDER BY\
\pard\pardeftab720\sl448

\f3\fs32 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 SELECT * FROM Customers\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ORDER BY Country ASC, CustomerName DESC;\
\
11) 
\f2\b\fs30 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 UNION
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  clause/operator is used to combine the results of two or more SELECT statements without returning any duplicate rows.\
\pard\pardeftab720\li60\ri60\sl480\sa300\qj
\cf0 To use UNION, each SELECT must have the same number of columns selected, the same number of column expressions, the same data type, and have them in the same order, but they do not have to be the same length.\
\pard\pardeftab720\sl448
\cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT column1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  column2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM table1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 WHERE condition\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\
UNION\
\
SELECT column1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  column2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM table1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 WHERE condition\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl448

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
12) \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 UNION ALL
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  operator is used to combine the results of two SELECT statements including duplicate rows.\
\cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT column1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  column2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM table1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 WHERE condition\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\
UNION ALL\
\
SELECT column1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  column2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
FROM table1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  table2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 WHERE condition\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl448

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
13) INDEXES an index is a pointer to data in a table. For faster searches. When index is created, it is assigned a ROWID for each row before it sorts out the data.\
\
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 CREATE INDEX index_name\
on table_name \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  column2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 );\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl448

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
14) 
\f1\fs24 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ALTER TABLE table_name ADD column_name datatype\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl320
\cf0 \
ALTER TABLE table_name DROP COLUMN column_name\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\
ALTER TABLE table_name MODIFY COLUMN column_name datatype\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\
ALTER TABLE table_name MODIFY column_name datatype NOT NULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl448

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ALTER TABLE table_name \
ADD CONSTRAINT \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 MyPrimaryKey\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  PRIMARY KEY \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 column1\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  column2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ...);\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl448

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ALTER TABLE ORDERS \
   ADD FOREIGN KEY \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 Customer_ID\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 )\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  REFERENCES CUSTOMERS \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ID\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 );\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl448

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
15) Constraints \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 This ensures the accuracy and reliability of the data in the database.\
\cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3        ID   INT              NOT NULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
       NAME VARCHAR \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 20\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 )\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3      NOT NULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
       AGE  INT              NOT NULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
       ADDRESS  CHAR \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 25\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 )\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
       SALARY   DECIMAL \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 18\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ),\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3        \
       PRIMARY KEY \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ID\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 )\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 );\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\pardeftab720\sl320

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ALTER TABLE CUSTOMERS\
   MODIFY SALARY  DECIMAL \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 18\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 2\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 )\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  NOT NULL\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2\fs30 \cf0 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \

\f0\fs24 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\sl320

\f1 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ALTER TABLE CUSTOMERS\
   ALTER COLUMN SALARY DROP DEFAULT\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\sl320

\f1 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ALTER TABLE CUSTOMER ADD PRIMARY KEY \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ID\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 );\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
16)  
\f2\fs30 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Views, which are kind of virtual tables, allow users to do the following:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri60\sl480\sa300\qj
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Structure data in a way that users or classes of users find natural or intuitive.\uc0\u8232 
\fs28 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\ls1\ilvl0
\fs30 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Restrict access to the data such that a user can see and (sometimes) modify exactly what they need and no more.\uc0\u8232 
\fs28 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\ls1\ilvl0
\fs30 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Summarize data from various tables which can be used to generate reports.\uc0\u8232 
\fs28 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f1\fs24 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 CREATE VIEW CUSTOMERS_VIEW AS\
\pard\pardeftab720\sl320
\cf0 SELECT name\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  age\
FROM  CUSTOMERS\
WHERE age IS NOT NULL\
WITH CHECK OPTION\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
17) 
\f1 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SAVEPOINT SAVEPOINT_NAME\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl320
\cf0 ROLLBACK TO SAVEPOINT_NAME\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
18) Nested Queries\
\
\pard\pardeftab720\sl320

\f1 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 *\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  \
     FROM CUSTOMERS \
     WHERE ID IN \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 (\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 SELECT ID \
                  FROM CUSTOMERS \
                  WHERE SALARY \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 >\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 4500\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 )\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ;\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
\
Views\

\f5 Subset of the database \
\pard\pardeftab720\li1170\fi-450
\cf0 Contains 
\b virtual data 
\b0 derived from the database files but is not explicitly stored\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \
\pard\pardeftab720\li540\fi-540

\f5 \cf0 \
\
Phases for designing a database: \
\pard\pardeftab720\li1170\fi-450

\b \cf0 Requirements specification and analysis\
Conceptual design\
Logical design \
Physical design\
\
\pard\pardeftab720\li540\fi-540
\cf0 Program-data independence\
\pard\pardeftab720\li1170\fi-450

\b0 \cf0 Structure of data files is stored in DBMS catalog separately from access programs\
\pard\pardeftab720\li540\fi-540
\cf0 Program-operation independence	\
\pard\pardeftab720\li1170\fi-450

\b \cf0 Operations
\b0  specified in two parts:\
\pard\pardeftab720\li1800\fi-360
\cf0 Interface includes operation name and data types of its arguments \
Implementation can be changed without affecting the interface\
\pard\pardeftab720\li1170\fi-450

\b \cf0 \
\pard\pardeftab720\li540\fi-540
\cf0 Database designers 
\b0 are responsible for: \
\pard\pardeftab720\li1170\fi-450
\cf0 Identifying the data to be stored \
Choosing appropriate structures to represent and store this data\
\
Types\
\pard\pardeftab720\li1800\fi-360

\b \cf0 Casual end users\
Naive 
\b0 or
\b  parametric end users\
Sophisticated end users\
Standalone users\
\pard\pardeftab720\li540\fi-540

\b0 \cf0 Extending database capabilities for new applications\
\pard\pardeftab720\li1170\fi-450
\cf0 Extensions to better support specialized requirements for applications\
\pard\pardeftab720\li1170\fi-450

\b \cf0 Enterprise resource planning (ERP)\
Customer relationship management (CRM)\
\pard\pardeftab720\li540\fi-540

\b0 \cf0 Databases versus information retrieval\
\pard\pardeftab720\li1170\fi-450

\b \cf0 Information retrieval (IR)\
\pard\pardeftab720\li1800\fi-360

\b0 \cf0 Deals with books, manuscripts, and various forms of library-based articles\
\pard\pardeftab720\li540\fi-540
\cf0 Database \
\pard\pardeftab720\li1170\fi-450
\cf0 Collection of related data (recorded facts)\
\pard\pardeftab720\li540\fi-540
\cf0 DBMS \
\pard\pardeftab720\li1170\fi-450
\cf0 Generalized software package for implementing and maintaining a computerized database\
\pard\pardeftab720\li540\fi-540
\cf0 Several categories of database users\
Database applications have evolved\
\pard\pardeftab720\li1170\fi-450
\cf0 Current trends: IR, Web\
\
\
\pard\pardeftab720\fi720
\cf0 \
\pard\pardeftab720\li1170\fi-450

\b \cf0 \
}